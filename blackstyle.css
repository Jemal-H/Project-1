body {
    margin: 0;
    font-family: Arial;
    background: #1a1a2e;
    color: white;
}

.gamepage {
    padding: 20px;
}

/* Hide the radio inputs */
input[type="radio"],
input[type="checkbox"] {
    display: none;
}

.topbar {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
}

.colorbtns {
    display: flex;
    gap: 10px;
}

.colorbtn {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 4px solid rgba(255, 255, 255, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
}

.colorbtn:hover {
    transform: scale(1.2);
}

.green { background: darkgreen; }
.blue { background: darkblue; }
.red { background: darkred; }

/* Active state for selected color button */
#green-table:checked ~ .topbar .green {
    border: 4px solid gold;
    box-shadow: 0 0 15px gold;
}

#blue-table:checked ~ .topbar .blue {
    border: 4px solid gold;
    box-shadow: 0 0 15px gold;
}

#red-table:checked ~ .topbar .red {
    border: 4px solid gold;
    box-shadow: 0 0 15px gold;
}

.money {
    font-size: 24px;
    font-weight: bold;
}

.gametable {
    background: #0a5f38;
    height: 60vh;
    border-radius: 200px;
    border: 8px solid #8B4513;
    padding: 40px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    position: relative;
    transition: background 0.5s ease;
}

/* Change table color based on selected radio button */
#green-table:checked ~ .gametable {
    background: #0a5f38;
}

#blue-table:checked ~ .gametable {
    background: #1e3a8a;
}

#red-table:checked ~ .gametable {
    background: #7f1d1d;
}

.pot-area {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.pot {
    font-size: 24px;
    font-weight: bold;
    color: gold;
    opacity: 1;
}

@keyframes showpot {
    from { opacity: 0; transform: scale(0.5); }
    to { opacity: 1; transform: scale(1); }
}

.pot-amount::after {
    content: '35';
}

@keyframes changepot {
    100% { content: '35'; }
}

.dealerside, .playerside {
    width: 100%;
    text-align: center;
}

.cards {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 15px;
}

.card {
    width: 70px;
    height: 100px;
    background: white;
    border-radius: 5px;
    color: black;
    font-size: 20px;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 1;
}

@keyframes cardslide {
    from { transform: translateY(-200px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

.redcard { color: red; }

.facedown {
    background: blue;
    color: white;
}

.carddeck {
    position: absolute;
    right: 50px;
    top: 45%;
}

.deckcard {
    width: 70px;
    height: 100px;
    background: blue;
    border-radius: 5px;
    border: 2px solid white;
}

.bottomarea {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.betting {
    display: flex;
    gap: 15px;
    align-items: center;
}

.bettext {
    font-size: 18px;
}

@keyframes updatebet {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); color: gold; }
    100% { transform: scale(1); }
}

.current-bet::after {
    content: '35';
}

@keyframes changbet {
    100% { content: '35'; }
}

.chip {
    width: 55px;
    height: 55px;
    border-radius: 50%;
    border: 3px solid white;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.chip:hover {
    transform: scale(1.2);
}

.red-chip { background: red; }
.green-chip { background: green; }
.blue-chip { background: blue; }
.black-chip { background: black; color: gold; }

.gamebuttons {
    display: flex;
    gap: 10px;
}

button {
    padding: 15px 30px;
    font-size: 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: transform 0.2s ease;
}

button:hover {
    transform: scale(1.1);
}

.button-label {
    padding: 15px 30px;
    font-size: 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    display: inline-block;
    transition: transform 0.2s ease;
}

.button-label:hover {
    transform: scale(1.1);
}

/* Visual feedback for clicked buttons */
#stand-action:checked ~ .bottomarea .hitbtn {
    background: #ff6b00;
    box-shadow: inset 0 2px 8px rgba(0,0,0,0.3);
}

#show-result:checked ~ .bottomarea .button-label[for="show-result"] {
    background: #45a049;
    box-shadow: inset 0 2px 8px rgba(0,0,0,0.3);
}


.hitbtn {
  background: orange; 
  color: white;
}
.card-wrapper {
    position: relative;
    width: 70px;
    height: 100px;
}

.facedown,
.faceup {
    position: absolute;
    top: 0;
    left: 0;
    width: 70px;
    height: 100px;
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    font-weight: bold;
}

/* Facedown card styling */
.facedown {
    background: blue;
    color: white;
    z-index: 2;
    opacity: 1;
    transition: opacity 0.5s ease;
}

/* Faceup card styling */
.faceup {
    background: white;
    color: red;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.5s ease;
}

/* When stand button is clicked, reveal dealer card */
#stand-action:checked ~ .gametable .dealerside .facedown {
    opacity: 0;
}

#stand-action:checked ~ .gametable .dealerside .faceup {
    opacity: 1;
}

/* Dealer reveal keyframes */
@keyframes fadeOut {
    to {
        opacity: 0;
        pointer-events: none;
    }
}

@keyframes fadeIn {
    to {
        opacity: 1;
    }
}
.losemsg {
    position: fixed;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.8);
    background: #000;
    padding: 40px 80px;
    border-radius: 15px;
    font-size: 40px;
    color: limegreen;
    opacity: 0;
    z-index: 10;
    pointer-events: none;
    transition: all 0.5s ease;
}

/* Show result when checkbox is checked */
#show-result:checked ~ .losemsg {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

@keyframes showwin {
    from {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}